}
#for loop to change the form of odds ratio
or1<-numeric(nrow(tal2))
for(i in 1:nrow(tal2)){
or1[i]<-format(tal2[i,4],digits = digit)
}
#for loop to change the forme of coefficient
cof1<-numeric(nrow(tal2))
for(i in 1:nrow(tal2)){
cof1[i]<-format(tal2[i,2],digits = digit)
}
#combine the p-value and the name of variavles and CI
out1 <- data.frame(Parameter = as.character(tal2[,1]),
Coefficient = cof1,
p.value = res1,
OR = or1,
CI= paste0("(",
coi1,
",",
coi2,
")"))
names(out1)[5] <- "CI(95%)"
out1
}else{
a<-summary(x)
ci<-confint(x)
#get the p-value from the summary
pvalue<-a$coefficients[,4]
es<-a$coefficients[,1]
pvalue<-as.data.frame(pvalue)
variable<-rownames(pvalue)
pvalues<-cbind(variable,es,ci,pvalue)
rownames(pvalues)<-NULL
#delete the intercept row
ta<-pvalues[-1,]
#choose the variables which p.value is smaller than 0.005
de<-which(ta[,5] < 0.05)
ta2<-ta[de,]
#give a function to change the form of p-value
test<-function(x){
if(x<0.001){
x.txt1<-"<0.001"
}else{
x.txt1<-"<0.05"
}
x.txt1
}
#change the form of p-value
res <- numeric(nrow(ta2))
for(i in 1:nrow(ta2)){
res[i]<-test(ta2[i,5])
}
#For loop to change the forme of the CI
ci1 <- numeric(nrow(ta2))
ci2 <- numeric(nrow(ta2))
for(i in 1:nrow(ta2)){
ci1[i]<-format(ta2[i,3],digits = digit)
ci2[i]<-format(ta2[i,4],digits = digit)
}
#for loop to change the forme of coefficient
cof<-numeric(nrow(ta2))
for(i in 1:nrow(ta2)){
cof[i]<-format(ta2[i,2],digits = digit)
}
#combine the p-value and the name of variavles and CI
out <- data.frame(Parameter = as.character(ta2[,1]),
Coefficient = cof,
CI= paste0("(",
ci1,
",",
ci2,
")"),
p.value=res)
names(out)[3] <- "CI(95%)"
out
}
}else{
a<-summary(x)
ci<-confint(x)
#get the p-value from the summary
pvalue<-a$coefficients[,4]
es<-a$coefficients[,1]
pvalue<-as.data.frame(pvalue)
variable<-rownames(pvalue)
pvalues<-cbind(variable,es,ci,pvalue)
rownames(pvalues)<-NULL
#delete the intercept row
ta<-pvalues[-1,]
#choose the variables which p.value is smaller than 0.005
de<-which(ta[,5] < 0.05)
ta2<-ta[de,]
#give a function to change the form of p-value
test<-function(x){
if(x<0.001){
x.txt1<-"<0.001"
}else{
x.txt1<-"<0.05"
}
x.txt1
}
#change the form of p-value
res <- numeric(nrow(ta2))
for(i in 1:nrow(ta2)){
res[i]<-test(ta2[i,5])
}
#For loop to change the forme of the CI
ci1 <- numeric(nrow(ta2))
ci2 <- numeric(nrow(ta2))
for(i in 1:nrow(ta2)){
ci1[i]<-format(ta2[i,3],digits = digit)
ci2[i]<-format(ta2[i,4],digits = digit)
}
#for loop to change the forme of coefficient
cof<-numeric(nrow(ta2))
for(i in 1:nrow(ta2)){
cof[i]<-format(ta2[i,2],digits = digit)
}
#combine the p-value and the name of variavles and CI
out <- data.frame(Parameter = as.character(ta2[,1]),
Coefficient = cof,
CI= paste0("(",
ci1,
",",
ci2,
")"),
p.value=res)
names(out)[3] <- "CI(95%)"
out
}
}
smrmul(fit2,alternative = "logistic")
library(lng)
?smrmul
library(lng)
library(lng)
library(lng)
library(lng)
library(lng)
library(lng)
library(lng)
?confounding
library(lng)
library(lng)
library(NHANES)
library(knitr)
#sample data:
data <- NHANES[, c(4, 9, 10, 17, 20, 21, 35, 40)]
data1 <- data[complete.cases(data), ]
dat <- data1
fit1 <- lm(TotChol~., data = dat)
fit2 <- glm(Diabetes~. + TotChol:Education, data = dat, family = binomial())
#y1 <- dat$TotChol
#x1 <- dat$Age
#y2 <- dat$Diabetes
#x2 <- dat$Weight
source("/Users/xinyegui/Documents/OneDrive/文档/Cornell1/Spring 2018/fundament biomedical/finalproject/functions/decrib.R")
library(NHANES)
library(knitr)
#sample data:
data <- NHANES[, c(4, 9, 10, 17, 20, 21, 35, 40)]
data1 <- data[complete.cases(data), ]
dat <- data1
fit1 <- lm(TotChol~., data = dat)
fit2 <- glm(Diabetes~. + TotChol:Education, data = dat, family = binomial())
#y1 <- dat$TotChol
#x1 <- dat$Age
#y2 <- dat$Diabetes
#x2 <- dat$Weight
source("/Users/xinyegui/Documents/OneDrive/文档/Cornell1/Spring 2018/fundament biomedical/finalproject/functions/decrib.R")
decrib(dat)
smruni(dat$TotChol, dat,alternative = "linear")
smruni(dat$Diabetes, dat,alternative = "logistic")
fit1 <- lm(TotChol~., data = dat)
smrmul(fit1,alternative = "linear")
fit1 <- lm(TotChol~., data = dat)
smrmul(fit1)
fit2 <- glm(Diabetes~., data = dat, family = binomial())
smrmul(fit2,alternative = "logistic")
library(lng)
library(lng)
library(lng)
devtools::use_data()
library(readr)
packagesample <- read_csv("~/Downloads/package/lng/data/packagesample.csv")
View(packagesample)
devtools::use_data()
devtools::use_data()
devtools::use_data("packagesample.csv")
devtools::use_data("packagesample")
devtools::use_data("packagesample")
devtools::use_data("packagesample.csv")
save("packagesample.csv")
getwd()
data<-read.csv("packagesample.csv")
devtools::use_data(data)
devtools::use_data(data,samples)
devtools::use_data(data,samples,overwrite = TRUE)
data<-read.csv("packagesample.csv")
devtools::use_data(packagesample)
library(lng)
packagesample
library(lng)
library(NHANES)
?NHANES
load("~/Downloads/package/lng/data/packagesample.rda")
str(packagesample)
?packagesample
library(lng)
?packagesample
packagesample
library(lng)
library(lng)
lng?
?lng
?lng
?decrib
?packagesample
getwd
getwd()
data<-read.csv("packagesample.csv")
use_data(packagesample)
devtools::use_data(data, packagesample, internal = TRUE)
library(lng)
data
devtools::use_data(packagesample, internal = TRUE)
getwd()
devtools::use_data(packagesample, internal = TRUE,overwrite = TRUE)
?packagesample
?lng
`lng-package`
?lng
?packagesample
library(lng)
?packagesample
library(lng)
library(lng)
library(lng)
library(lng)
library(lng)
data<-packagesample
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
nvar
data
data<-packagesample
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
data[,1]
nvar
mean
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
mean(data[,1])
unlist(data)
data
class(data)
data
data<-data[2:9]
data
data<-data[,,2:9]
data<-data[,2:9]
data<-packagesample
data
data<-data[,2:9]
data
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
sd
mean(data[,,1])
data1<-as.numeric(data)
data1<-unlist(data)
mean(data1[,,1])
class(data1)
data
class(data)
data<-packagesample
data<-data[,7:9]
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
data
data<-packagesample
data<-data[,7:8]
data
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
mean(data[,1])
data
data[,1]
data[1,1]
data[2,1]
data[3,1]
data[8,1]
class(data)
library(MASS)
birthwt
class(birthwt)
library(MASS)
data<-birthwt
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
mean(data[,1])
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
mean
sd
colnames(data)
rbind(names,mean)
cbind(names,mean)
names
names<-colnames(data)
names
mean
names<-colnames(data)
cbind(names,mean)
rbind(names,mean)
rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
table2
out<-data.frame(table1,table2)
out
mes<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
colnames(table1)<-c("Variable","Mean")
colnames(table2)<-c("Variable","Standard Deviation")
out<-data.frame(table1,table2)
out
source('~/Downloads/package/lng/R/chunkSummary.R', echo=TRUE)
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
table1
table2<-rbind(names,round(sd,2))
table2
colnames(table1)<-c("Variable","Mean")
rownames(table1)<-c("Variable","Mean")
rownames(table2)<-c("Variable","Standard Deviation")
table1
table2
library(MASS)
data<-birthwt
class(birthwt)
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
table1
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
rownames(table1)<-c("Variable","Mean")
rownames(table2)<-c("Variable","Standard Deviation")
out<-data.frame(table1,table2)
out
nrow(out)
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
rownames(table1)<-c("Variable","Mean")
rownames(table2)<-c("Variable","Standard Deviation")
table1
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(table1,round(sd,2))
out<-data.frame(Variable = names,
Mean = round(mean,2),
SD=round(sd,2))
names(out)[3] <- "Standard Deviation"
out
chunkSummary<- function(data){
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
names<-colnames(data)
out<-data.frame(Variable = names,
Mean = round(mean,2),
SD=round(sd,2))
names(out)[3] <- "Standard Deviation"
out
}
library(MASS)
data<-birthwt
chunkSummary(data = data)
library(sourceCpp)
library(lng)
library(sourceCpp)
library(sourceCpp)
install.packages("sourceCpp")
library(sourceCpp)
getwd()
?sourcecPP
