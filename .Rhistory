table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
table1
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
rownames(table1)<-c("Variable","Mean")
rownames(table2)<-c("Variable","Standard Deviation")
out<-data.frame(table1,table2)
out
nrow(out)
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(names,round(sd,2))
rownames(table1)<-c("Variable","Mean")
rownames(table2)<-c("Variable","Standard Deviation")
table1
names<-colnames(data)
table1<-rbind(names,round(mean,2))
table2<-rbind(table1,round(sd,2))
out<-data.frame(Variable = names,
Mean = round(mean,2),
SD=round(sd,2))
names(out)[3] <- "Standard Deviation"
out
chunkSummary<- function(data){
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
names<-colnames(data)
out<-data.frame(Variable = names,
Mean = round(mean,2),
SD=round(sd,2))
names(out)[3] <- "Standard Deviation"
out
}
library(MASS)
data<-birthwt
chunkSummary(data = data)
library(sourceCpp)
library(lng)
library(sourceCpp)
library(sourceCpp)
install.packages("sourceCpp")
library(sourceCpp)
getwd()
?sourcecPP
repos <- getOption('repos')
repos["CRAN"] <- "http://cran.rstudio.org"
option(repos = repos)
install.packages(â€˜sourceCppâ€™)
repos <- getOption('repos')
repos["CRAN"] <- "http://cran.rstudio.org"
option(repos = repos)
install.packages("sourceCpp")
setRepositories()
repos <- getOption('repos')
repos["CRAN"] <- "http://cran.rstudio.org"
option(repos = repos)
install.packages("sourceCpp")
library(lng)
install.packages("Rcpp")
install.packages("Rcpp")
devtools::use_rcpp()
library(sourceCpp)
install.packages("sourceCpp")
getwd()
sourceCpp("/Users/summer/Downloads/package/lng/str/chunkSummaryC.cpp")
Rcpp.package.skeleton("lng")
install.packages("Rcpp11")
library(Rcpp11)
sourceCpp("/Users/summer/Downloads/package/lng/str/chunkSummaryC.cpp")
chunkSummaryC(birthwt)
library(MASS)
require(sourceCpp)
install.packages("sourceCpp")
Rcpp.package.skeleton( "test" )
library(Rcpp)
Rcpp.package.skeleton( "test" )
library(test)
.Call('rcpp_hello_world')
library(sourceCpp)
install.packages("sourceCpp")
Rcmd INSTALL test
install.packages("test")
library(test)
library(lng)
getwd()
sourceCpp("/Users/summer/Downloads/package/lng/src/timesTwo.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
birthwt
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
ceiling(nrow(birthwt)/4)
ceiling(nrow(birthwt)/2)
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
95-48
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
95-48
95-48
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
library(lng)
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
dat2
nrow(dat2)
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
dat2
dat1
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
dat2
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
birthwt
library(MASS)
birthwt
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
dat1<-data[1:n1,,]
dat1
data
n
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
n1
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
dat1
dat2
dat3
dat4
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
n<-nrow(data)
n1<-ceiling(n/4)
n1
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
n2
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
data
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
dat4
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
for(i in 1:nvar){
mean[i]<-mean(data[,i])
sd[i]<-sd(data[,i])
}
names<-colnames(data)
out<-data.frame(Variable = names,
Mean = round(mean,2),
SD=round(sd,2))
names(out)[3] <- "Standard Deviation"
out
mean1<-mean(dat1)
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
mean1<-mean(dat1)
dat1
for(i in 1:nvar){
mean1<-mean(dat1[,i])
}
mean1
nvar<-ncol(data)
mean<-numeric(nvar)
sd<-numeric(nvar)
i in 1:nvar
nvar
for(i in 1:nvar){
mean1<-mean(dat1[,,i])
}
for(i in 1:nvar){
mean1[i]<-mean(dat1[,i])
}
mean1
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-round(mean(dat[j][,i],2))
sd[j][i]<-round(sd(dat[j][,i],2))
}
}
for(i in 1:4){
mean[i]<- numeric(ncol(data))
sd[i]<- numeric(ncol(data))
}
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-round(mean(dat[j][,i],2))
sd[j][i]<-round(sd(dat[j][,i],2))
}
}
for(i in 1:4){
mean[i]<- numeric(ncol(data))
sd[i]<- numeric(ncol(data))
}
for(i in 1:4){
mean[i]<- numeric(ncol(dat[i]))
sd[i]<- numeric(ncol(dat[i]))
}
mean
sd
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-round(mean(dat[j][,i],2))
sd[j][i]<-round(sd(dat[j][,i],2))
}
}
nvar
for(i in 1:nvar){
for(j in 1:4){
mean[j]<-round(mean(dat[j][,i],2))
sd[j]<-round(sd(dat[j][,i],2))
}
}
for(i in 1:nvar){
for(j in 1:4){
mean[j]<- numeric(ncol(dat[j]))
sd[j]<- numeric(ncol(dat[j]))
}
mean[j]<-mean(dat[j][,i])
}
mean
sd
for(i in 1:nvar){
for(j in 1:4){
mean[j]<- numeric(ncol(dat[j]))
sd[j]<- numeric(ncol(dat[j]))
}
mean[1]<-mean(dat[1][,i])
}
dat
data
dat<-birthwt
dat
for(i in 1:nvar){
for(j in 1:4){
mean[j]<- numeric(ncol(dat[j]))
sd[j]<- numeric(ncol(dat[j]))
}
mean[j]<-mean(dat[j][,i])
}
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-round(mean(dat[j][,i],2))
sd[j][i]<-round(sd(dat[j][,i],2))
}
}
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-round(mean(dat[j][,,i],2))
sd[j][i]<-round(sd(dat[j][,,i],2))
}
}
for(i in 1:4){
mean[i]<- numeric(ncol(dat[i]))
sd[i]<- numeric(ncol(dat[i]))
}
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-mean(dat[j][,i],2)
sd[j][i]<-sd(dat[j][,i],2)
}
}
dat[1]
for(i in 1:nvar){
for(j in 1:4){
mean[j][i]<-mean(dat[,i][j],2)
sd[j][i]<-sd(dat[,i][j],2)
}
}
for(i in 1:nvar){
mean1<-mean(dat1[,i])
}
mean1
for(i in 1:nvar){
mean1[i]<-mean(dat1[,i])
}
mean1
apply(dat1,2,mean)
round(apply(dat1,2,mean),2)
round(apply(dat1,2,mean),2)
round(apply(dat1,2,mean),2)
round(apply(dat1,2,sd),2)
round(apply(dat2,2,mean),2)
round(apply(dat2,2,sd),2)
round(apply(dat3,2,mean),2)
round(apply(dat3,2,sd),2)
round(apply(dat4,2,mean),2)
round(apply(dat4,2,sd),2)
mean1<-round(apply(dat1,2,mean),2)
sd1<-round(apply(dat1,2,sd),2)
mean2<-round(apply(dat2,2,mean),2)
sd2<-round(apply(dat2,2,sd),2)
mean3<-round(apply(dat3,2,mean),2)
sd3<-round(apply(dat3,2,sd),2)
mean4<-round(apply(dat4,2,mean),2)
sd4<-round(apply(dat4,2,sd),2)
n<-nrow(data)
n1<-ceiling(n/4)
n2<-ceiling(n/2)
n3<-ceiling(3*n/4)
n4<-n
dat1<-data[1:n1,,]
dat2<-data[(n1+1):n2,,]
dat3<-data[(n2+1):n3,,]
dat4<-data[(n3+1):n4,,]
mean1<-round(apply(dat1,2,mean),2)
sd1<-round(apply(dat1,2,sd),2)
mean2<-round(apply(dat2,2,mean),2)
sd2<-round(apply(dat2,2,sd),2)
mean3<-round(apply(dat3,2,mean),2)
sd3<-round(apply(dat3,2,sd),2)
mean4<-round(apply(dat4,2,mean),2)
sd4<-round(apply(dat4,2,sd),2)
names<-colnames(data)
out<-data.frame(Variable = names,
Mean =paste0(mean1,mean2,mean3,mean4),
SD=paste0(sd1,sd2,sd3,sd4))
names(out)[3] <- "Standard Deviation"
out
mean1
names<-colnames(data)
out<-data.frame(Variable = names,
Chunk1 = data.frame(mean1,sd1),
Chunk2 = data.frame(mean2,sd2),
Chunk3 = data.frame(mean3,sd3),
Chunk4 = data.frame(mean4,sd4))
#names(out)[3] <- "Standard Deviation"
out
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
sourceCpp("/Users/summer/Downloads/package/lng/src/chunkSummaryC.cpp")
library(lng)
rnorm(5,3)
a<-rnorm(5,3)
b<-rnorm(5,8)
c<-rbind(a,b)
confounding(a,b,c)
data.frame(c)
confounding(a,b,c)
class(c)
c<-data.frame(c)
class(c)
confounding(a,b,dat=c)
a<-rnorm(5,3)
b<-rnorm(5,8)
c<-cbind(a,b)
c<-data.frame(c)
x<-a
y<-b
dat<-c
y_length <- length(y)
data_names <- colnames(dat)
name_length <- length(data_names)
result <- numeric(name_length)
for (i in 1:name_length) {
result[i] <- sum(y %in% factor(unlist(dat[data_names[i]])))
}
ncol_y <- which(result == y_length)
y_group <- data_names[ncol_y]
y_group
t name and column number of covariate of interest
x_length <- length(x)
result1 <- numeric(name_length)
for (i in 1:name_length) {
result1[i] <- sum(x %in% factor(unlist(dat[data_names[i]])))
}
x_length <- length(x)
result1 <- numeric(name_length)
for (i in 1:name_length) {
result1[i] <- sum(x %in% factor(unlist(dat[data_names[i]])))
}
ncol_x <- which(result1 == x_length)
x_group <- data_names[ncol_x]
dat1 <- dat[c(ncol_y, ncol_x)]
dat2 <- cbind(dat[ncol_y], dat[-c(ncol_y, ncol_x)])
dat3 <- cbind(dat[ncol_x], dat[-c(ncol_y, ncol_x)])
con_n <- numeric(ncol(dat2))
unlist(dat2[1]
if (is.null(levels(y))) {
for (i in 2:ncol(dat2)) {
fit2 <- lm(unlist(dat2[1]) ~ unlist(dat2[i]), data = dat2)
n_coef <- nrow(summary(fit2)$coefficients)
if (is.null(levels(x))) {
fit3 <- lm(unlist(dat3[1]) ~ unlist(dat3[i]), data = dat3)
if (summary(fit2)$coefficients[2, 4] < 0.05 &
summary(fit3)$coefficients[2, 4] < 0.05) {
con_n[i - 1] <- i
}
} else {
fit3 <- glm(unlist(dat3[1]) ~ unlist(dat3[i]),
data = dat3,
family = binomial())
for (j in 2:n_coef) {
if (summary(fit2)$coefficients[j, 4] < 0.05 &
summary(fit3)$coefficients[j, 4] < 0.05) {
con_n[i - 1] <- i
}
}
}
}
for (i in 2:ncol(dat2)) {
fit2 <- lm(unlist(dat2[1]) ~ unlist(dat2[i]), data = dat2)
n_coef <- nrow(summary(fit2)$coefficients)
dat2
NHANES
library(NHANES)
dat
a<-rnorm(5,3)
b<-rnorm(5,8)
a
library(NHANES)
smrmul<-function(x,
alternative = c("logistic","linear"),
digit = 3,
...){
